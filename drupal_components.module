<?php

use Drupal\file\Entity\File;
use Drupal\image\Entity\ImageStyle;
use Drupal\media\Entity\Media;

/**
 * Implements hook_theme() to add the template definition.
 **/
function drupal_components_theme($existing, $type, $theme, $path) {
  return [
    'paragraph__hero_video' => [
      'variables' => ['data' => NULL],
      'template' => 'paragraphs/paragraph--hero-video',
      'base hook' => 'paragraph'
    ],
    'block__topheaderaddresssocial' => [
      'variables' => ['data' => NULL],
      'template' => 'blocks/block--topheaderaddresssocial',
      'base hook' => 'block'
    ],
    'footer_contact_block' => [
      'variables' => [
        'extended_business_name' => NULL,
        'full_business_name' => NULL,
        'short_business_name' => NULL,
        'business_address_1' => NULL,
        'business_address_2' => NULL,
        'business_email' => NULL,
        'business_phone' => NULL,
      ],
      'template' => 'blocks/block--footer-contact-block'
    ],
    'custom_logo_block' => [
      'variables' => [
        'site_name' => NULL,
        'site_slogan' => NULL,
        'logo_image_solid' => NULL,
        'logo_image_trans' => NULL,
      ],
      'template' => 'blocks/block--custom-logo-block'
    ]
  ];
}

// Preprocess Block
function drupal_components_preprocess_block__topheaderaddresssocial(&$variables) {
  $nestbend_config = \Drupal::service('config.factory')->get('drupal_components.settings');
  $variables['extended_name'] = $nestbend_config->get('extended_business_name');
  $variables['address_1'] = $nestbend_config->get('business_address_1');
  $variables['address_2'] = $nestbend_config->get('business_address_2');
  $variables['business_phone'] = $nestbend_config->get('business_phone');
}

/**
 * Implements hook_preprocess().
 */
function drupal_components_preprocess_paragraph__hero_video(&$variables) {
  $paragraphEntity = $variables['paragraph'];
  $data = getVideoHeroData($paragraphEntity);
  $variables['data'] = $data;
}

function getVideoHeroData($entity) {

  $data = [];

  // Get the video media
  if($entity->hasField('field_video_media')) {
    if (!$entity->get('field_video_media')->isEmpty()) {
      $media_entity = $entity->get('field_video_media')->getValue();
      $media = Media::load($media_entity[0]['target_id']);
      $fid = $media->field_media_video_file->target_id;
      $file = File::load($fid);
      $new_url = $file->createFileUrl();
      $data['video_url'] = $new_url;
    }
  }

  if($entity->hasField('field_image')) {
    if (!$entity->get('field_image')->isEmpty()) {
      $image_entity = $entity->get('field_image')->getValue();
      $image_entity = File::load($image_entity[0]['target_id']);
      $image_url = ImageStyle::load('webp')->buildUrl($image_entity->getFileUri());
      $data['image_url'] = $image_url;
    }
  }

  return $data;
}


